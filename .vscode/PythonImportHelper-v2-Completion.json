[
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "Deck",
        "importPath": "card",
        "description": "card",
        "isExtraImport": true,
        "detail": "card",
        "documentation": {}
    },
    {
        "label": "Player",
        "importPath": "player",
        "description": "player",
        "isExtraImport": true,
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "House",
        "importPath": "player",
        "description": "player",
        "isExtraImport": true,
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "Player",
        "importPath": "player",
        "description": "player",
        "isExtraImport": true,
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "Game",
        "importPath": "game",
        "description": "game",
        "isExtraImport": true,
        "detail": "game",
        "documentation": {}
    },
    {
        "label": "Suit",
        "kind": 6,
        "importPath": "GameGuessingApp.card",
        "description": "GameGuessingApp.card",
        "peekOfCode": "class Suit:\n    suit = {\n        \"Heart\": 4,\n        \"Diamond\": 3,\n        \"Club\": 2,\n        \"Spade\": 1    \n    }\nclass Rank:\n    rank = {\n        \"3\": 3,",
        "detail": "GameGuessingApp.card",
        "documentation": {}
    },
    {
        "label": "Rank",
        "kind": 6,
        "importPath": "GameGuessingApp.card",
        "description": "GameGuessingApp.card",
        "peekOfCode": "class Rank:\n    rank = {\n        \"3\": 3,\n        \"4\": 4,\n        \"5\": 5,\n        \"6\": 6,\n        \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"10\": 10,",
        "detail": "GameGuessingApp.card",
        "documentation": {}
    },
    {
        "label": "Card",
        "kind": 6,
        "importPath": "GameGuessingApp.card",
        "description": "GameGuessingApp.card",
        "peekOfCode": "class Card:\n    def __init__(self, suit, rank):\n        self._suit = suit\n        self._rank = rank\n    @property\n    def suit(self):\n        return self._suit\n    # Property for rank to manage access\n    @property\n    def rank(self):",
        "detail": "GameGuessingApp.card",
        "documentation": {}
    },
    {
        "label": "Deck",
        "kind": 6,
        "importPath": "GameGuessingApp.card",
        "description": "GameGuessingApp.card",
        "peekOfCode": "class Deck:\n    def __init__(self):\n        self.cards = [\n            Card(suit, rank)\n            for suit in Suit.suit.keys()\n            for rank in Rank.rank.keys()\n            if rank not in (\"Black Joker\", \"Red Joker\")\n        ] + [Card(\"\", \"Black Joker\"), Card(\"\", \"Red Joker\")]\n        self.shuffle()\n    def shuffle(self):",
        "detail": "GameGuessingApp.card",
        "documentation": {}
    },
    {
        "label": "Game",
        "kind": 6,
        "importPath": "GameGuessingApp.game",
        "description": "GameGuessingApp.game",
        "peekOfCode": "class Game:\n    def __init__(self):\n        self.deck = Deck()\n        self.player = Player(\"Player\")\n        self.house = House()\n        self.current_reward = 0\n    # Validate user input using regular expressions\n    @log_method_call\n    def validate_input():\n        isVailid = False",
        "detail": "GameGuessingApp.game",
        "documentation": {}
    },
    {
        "label": "log_method_call",
        "kind": 2,
        "importPath": "GameGuessingApp.game",
        "description": "GameGuessingApp.game",
        "peekOfCode": "def log_method_call(func):\n    def wrapper(*args, **kwargs):\n        logging.info(f\"Calling method: {func.__name__}\")\n        result = func(*args, **kwargs)\n        logging.info(f\"Method {func.__name__} finished\")\n        return result\n    return wrapper\nclass Game:\n    def __init__(self):\n        self.deck = Deck()",
        "detail": "GameGuessingApp.game",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "GameGuessingApp.main",
        "description": "GameGuessingApp.main",
        "peekOfCode": "def main():\n    game = Game()\n    game.start_game()\n    player = Player(\"Player\")\n    if player.points >= 1000:\n        print(\"You Win\")\nif __name__ == \"__main__\":\n    main()",
        "detail": "GameGuessingApp.main",
        "documentation": {}
    },
    {
        "label": "Player",
        "kind": 6,
        "importPath": "GameGuessingApp.player",
        "description": "GameGuessingApp.player",
        "peekOfCode": "class Player:\n    def __init__(self, name):\n        self.name = name\n        self._points = 60\n        self.card = None\n    @property\n    def points(self):\n        return self._points\n    @points.setter\n    def points(self, value):",
        "detail": "GameGuessingApp.player",
        "documentation": {}
    },
    {
        "label": "House",
        "kind": 6,
        "importPath": "GameGuessingApp.player",
        "description": "GameGuessingApp.player",
        "peekOfCode": "class House:\n    def __init__(self):\n        self.card = None\n    def receive_card(self, card):\n        self.card = card",
        "detail": "GameGuessingApp.player",
        "documentation": {}
    }
]